{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.3.12046",
      "templateHash": "8378790679151102455"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The datacenter to use for the deployment."
      }
    },
    "environmentName": {
      "type": "string"
    },
    "projectName": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "logicAppName": {
      "type": "string"
    },
    "appServicePlanName": {
      "type": "string"
    },
    "sharedResourceGroup": {
      "type": "string"
    },
    "vnetName": {
      "type": "string"
    },
    "localKeyVaultName": {
      "type": "string"
    },
    "dataverseObjectId": {
      "type": "string"
    },
    "apimManagedIdentityId": {
      "type": "string"
    },
    "sa_name": {
      "type": "string",
      "defaultValue": "sa"
    },
    "customStorageName": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "dynamicsCrmSecret": {
      "type": "securestring"
    },
    "dynamicsCrmClientId": {
      "type": "securestring"
    },
    "dynamicsCrmDirectoryId": {
      "type": "string"
    },
    "dynamicsCrmEnvironmentUri": {
      "type": "string"
    },
    "cpiCreateCustomerUrl": {
      "type": "string"
    },
    "cpiCreateCustomerClientId": {
      "type": "string"
    },
    "cpiAccessTokenUrl": {
      "type": "string"
    },
    "cpiCreateCustomerClientSecret": {
      "type": "securestring"
    }
  },
  "variables": {
    "vaultUri": "[format('https://{0}.vault.azure.net/', parameters('localKeyVaultName'))]",
    "ResourceGroup": "[resourceGroup().location]",
    "customStorageAccountid": "[format('{0}/providers/Microsoft.Storage/storageAccounts/{1}', resourceGroup().id, parameters('customStorageName'))]",
    "endpointSuffix": ";EndpointSuffix=core.windows.net",
    "storageName": "[concat(toLower(parameters('sa_name')), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageName')]",
      "location": "[variables('ResourceGroup')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "kind": "workflowapp,functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "[parameters('projectName')]"
      },
      "properties": {
        "serverFarmId": "[resourceId(parameters('sharedResourceGroup'), 'Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
        "clientAffinityEnabled": false,
        "vnetRouteAllEnabled": true,
        "vnetImagePullEnabled": false,
        "vnetContentShareEnabled": false,
        "virtualNetworkSubnetId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('sharedResourceGroup')), 'Microsoft.Network/virtualNetworks', parameters('vnetName')), '2021-08-01').subnets[0].id]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('logicAppName'), 'appsettings')]",
      "kind": "string",
      "properties": {
        "netFrameworkVersion": "v6.0",
        "WORKFLOWS_RESOURCE_GROUP_NAME": "[resourceGroup().name]",
        "APP_KIND": "workflowApp",
        "AzureFunctionsJobHost__extensionBundle__id": "Microsoft.Azure.Functions.ExtensionBundle.Workflows",
        "AzureFunctionsJobHost__extensionBundle__version": "[1.*, 2.0.0)",
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', variables('storageName'), listKeys(format('{0}/providers/Microsoft.Storage/storageAccounts/{1}', resourceGroup().id, variables('storageName')), '2019-06-01').keys[0].value)]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_V2_COMPATIBILITY_MODE": "true",
        "FUNCTIONS_WORKER_RUNTIME": "node",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', variables('storageName'), listKeys(format('{0}/providers/Microsoft.Storage/storageAccounts/{1}', resourceGroup().id, variables('storageName')), '2019-06-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[parameters('logicAppName')]",
        "WEBSITE_NODE_DEFAULT_VERSION": "~18",
        "WORKFLOWS_SUBSCRIPTION_ID": "[subscription().subscriptionId]",
        "WORKFLOWS_LOCATION_NAME": "[parameters('location')]",
        "BLOB_CONNECTION_RUNTIMEURL": "",
        "keyVault_VaultUri": "[format('https://{0}.vault.azure.net/', parameters('localKeyVaultName'))]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2014-04-01').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0};IngestionEndpoint=https://northeurope-0.in.applicationinsights.azure.com/;LiveEndpoint=https://northeurope.livediagnostics.monitor.azure.com/;ApplicationId={1}', reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2014-04-01').InstrumentationKey, reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2014-04-01').ApplicationId)]",
        "DynamicsCrmSecret": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/DynamicsCrmSecret/)', variables('vaultUri'))]",
        "DynamicsCrmClientId": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/DynamicsCrmClientId/)', variables('vaultUri'))]",
        "DynamicsCrmDirectoryId": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/DynamicsCrmDirectoryId/)', variables('vaultUri'))]",
        "DynamicsCrmEnvironmentUri": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/DynamicsCrmEnvironmentUri/)', variables('vaultUri'))]",
        "CpiCreateCustomerClientId": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/CpiCreateCustomerClientId/)', variables('vaultUri'))]",
        "CpiCreateCustomerClientSecret": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/CpiCreateCustomerClientSecret/)', variables('vaultUri'))]",
        "CpiCreateCustomerUrl": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/CpiCreateCustomerUrl/)', variables('vaultUri'))]",
        "CpiAccessTokenUrl": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/CpiAccessTokenUrl/)', variables('vaultUri'))]",
        "Dataverse_environment": "[parameters('dynamicsCrmEnvironmentUri')]",
        "CustomStorageTableConnectionString": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/CustomStorageTableConnectionString/)', variables('vaultUri'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('logicAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[parameters('customStorageName')]",
      "location": "[variables('ResourceGroup')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', parameters('customStorageName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('customStorageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('customStorageName'), 'default', 'Hashes')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('customStorageName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('customStorageName'), 'default', 'InboundAccountsTransactionLog')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('customStorageName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('customStorageName'), 'default', 'InboundAccountsQueue')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('customStorageName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2014-04-01",
      "name": "[parameters('appInsightsName')]",
      "location": "[variables('ResourceGroup')]",
      "properties": {
        "applicationId": "[parameters('appInsightsName')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[parameters('localKeyVaultName')]",
      "location": "[variables('ResourceGroup')]",
      "tags": {
        "Environment": "[parameters('environmentName')]"
      },
      "properties": {
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "tenantId": "[subscription().tenantId]",
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true,
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'DynamicsCrmSecret')]",
      "properties": {
        "value": "[parameters('dynamicsCrmSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'DynamicsCrmClientId')]",
      "properties": {
        "value": "[parameters('dynamicsCrmClientId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'DynamicsCrmDirectoryId')]",
      "properties": {
        "value": "[parameters('dynamicsCrmDirectoryId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'DynamicsCrmEnvironmentUri')]",
      "properties": {
        "value": "[parameters('dynamicsCrmEnvironmentUri')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'CustomStorageTableConnectionString')]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}{2}', parameters('customStorageName'), listKeys(variables('customStorageAccountid'), '2015-05-01-preview').key1, variables('endpointSuffix'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'CpiCreateCustomerClientId')]",
      "properties": {
        "value": "[parameters('cpiCreateCustomerClientId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'CpiCreateCustomerClientSecret')]",
      "properties": {
        "value": "[parameters('cpiCreateCustomerClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'CpiCreateCustomerUrl')]",
      "properties": {
        "value": "[parameters('cpiCreateCustomerUrl')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('localKeyVaultName'), 'CpiAccessTokenUrl')]",
      "properties": {
        "value": "[parameters('cpiAccessTokenUrl')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('localKeyVaultName'))]",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.Web/sites', parameters('logicAppName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('logicAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('logicAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('localKeyVaultName'))]",
      "name": "[guid(resourceGroup().id, parameters('dataverseObjectId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[parameters('dataverseObjectId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-08-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('localKeyVaultName'))]",
      "name": "[guid(resourceGroup().id, parameters('apimManagedIdentityId'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[parameters('apimManagedIdentityId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('localKeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "[guid(subscription().id, 'Microsoft.Authorization', 'roleAssignments', 'graphRoleAssignment')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('logicAppName')), '2022-09-01', 'full').identity.principalId]",
        "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('logicAppName'))]"
      ]
    }
  ],
  "outputs": {
    "logicAppSystemAssignedIdentityTenantId": {
      "type": "string",
      "value": "[subscription().tenantId]"
    },
    "logicAppSystemAssignedIdentityObjectId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('logicAppName')), '2019-08-01', 'full').identity.principalId]"
    },
    "LAname": {
      "type": "string",
      "value": "[parameters('logicAppName')]"
    }
  }
}