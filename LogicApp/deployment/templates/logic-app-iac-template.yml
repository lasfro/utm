# IaC Logic App resources deployment template

parameters:
- name: environment
  type: string
- name: serviceConnection
  type: string
- name: dataverseEnvironment
  type: string

jobs:
- deployment: deploy_logicapp_resources
  displayName: Deploy Logic App Resources
  pool:
    vmImage: ubuntu-latest
  environment: ${{ parameters.environment }}
  variables:
    deploymentMode: 'Incremental'
  strategy:
    runOnce:
      deploy:
        steps:
        - download: current
          artifact: $(artifactName)

        - task: AzureResourceGroupDeployment@3
          name: AzureDeploy
          displayName: 'Deploy Logic App'
          inputs:
            azureResourceManagerConnection: ${{ parameters.serviceConnection }}
            resourceGroupName: $(resourceGroupName)
            action: 'Create Or Update Resource Group'
            location: $(resourceGroupLocation)
            csmFile: '$(Pipeline.Workspace)/$(artifactName)/logicapp-resources.bicep'
            overrideParameters: '
              -location $(resourceGroupLocation)
              -environmentName ${{ parameters.environment }}
              -projectName $(projectName)
              -appInsightsName $(appInsightsName)
              -logicAppName $(logicAppName)
              -appServicePlanName $(appServicePlanName)
              -sharedResourceGroup $(sharedResourceGroup)
              -localKeyVaultName $(localKeyVaultName)              
              -vnetName $(vnetName)
              -dynamicsCrmEnvironmentUri $(dynamicsEnvironmentUri)
              -dynamicsCrmSecret $(dynamicsSecret)
              -dynamicsCrmClientId $(dynamicsClientId)
              -dynamicsCrmDirectoryId $(dynamicsDirectoryId)
              -dynamicsCrmEnvironmentUri $(dynamicsEnvironmentUri)
              -dataverseObjectId $(dataverseObjectId)
              -cpiCreateCustomerClientId $(cpiCreateCustomerClientId)
              -cpiCreateCustomerClientSecret $(cpiCreateCustomerClientSecret)
              -cpiCreateCustomerUrl $(cpiCreateCustomerUrl)
              -cpiAccessTokenUrl $(cpiAccessTokenUrl)
              -apimManagedIdentityId $(apimManagedIdentityId)
              -customStorageName $(customStorageName)'

            deploymentMode: $(deploymentMode)
            deploymentOutputs: 'deploymentOutputs'
        
        # create environment variables from deployment ouptputs
        - task: PowerShell@2
          name: 'SetDeploymentOutputVariables'
          displayName: 'Set Deployment Output Variables'
          inputs:
            targetType: inline
            script: |
              $armOutputObj = '$(deploymentOutputs)' | ConvertFrom-Json
              $armOutputObj.PSObject.Properties | ForEach-Object {
                $keyname = $_.Name
                $value = $_.Value.value

                # Creates a standard pipeline variable
                Write-Output "##vso[task.setvariable variable=$keyName;issecret=true]$value"

                # Display keys in pipeline
                Write-Output "output variable: $keyName"
              }
            pwsh: true

        - task: AzureResourceGroupDeployment@3
          displayName: 'Deploy Connectors'
          inputs:
            azureResourceManagerConnection: ${{ parameters.serviceConnection }}
            resourceGroupName: $(resourceGroupName)
            location: $(resourceGroupLocation)
            csmFile: '$(Pipeline.Workspace)/$(artifactName)/connectors-template.bicep'
            overrideParameters: '
              -location $(resourceGroupLocation)
              -commondataserviceName $(commondataserviceName)
              -serviceBusResourceGroup $(serviceBusResourceGroup)
              -serviceBusName $(serviceBusName)
              -sharedServiceBusName $(sharedServiceBusName)
              -vnetName $(vnetName)
              -keyvaultName $(keyvaultName)
              -azuretablesName $(azuretablesName)
              -localKeyVaultName $(localKeyVaultName)
              -dynamicsCrmClientId $(dynamicsClientId)
              -dynamicsCrmSecret $(dynamicsSecret)
              -dynamicsCrmDirectoryId $(dynamicsDirectoryId)
              -logicAppSystemAssignedIdentityTenantId $(logicAppSystemAssignedIdentityTenantId)
              -logicAppSystemAssignedIdentityObjectId $(logicAppSystemAssignedIdentityObjectId)'
            deploymentMode: $(deploymentMode)
            deploymentOutputs: 'deploymentOutputsConnectors'

        # create environment variables from deployment ouptputs
        - task: PowerShell@2
          name: 'SetDeploymentOutputVariablesConnectors'
          displayName: 'Set Deployment Output Variables for connectors'
          inputs:
            targetType: inline
            script: |
              $armOutputObj = '$(deploymentOutputsConnectors)' | ConvertFrom-Json
              $armOutputObj.PSObject.Properties | ForEach-Object {
                $keyname = $_.Name
                $value = $_.Value.value

                # Creates a standard pipeline variable
                Write-Output "##vso[task.setvariable variable=$keyName;issecret=true]$value"

                # Display keys in pipeline
                Write-Output "output variable: $keyName"
              }
            pwsh: true

        # update vnetPrivatePortsCount
        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az webapp config set -g $(resourceGroupName) -n $(LAname) --generic-configurations '{"vnetPrivatePortsCount": 2}'
            addSpnToEnvironment: true
            useGlobalConfig: true

        # update app settings
        - task: AzureCLI@2
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az functionapp config appsettings set --name $(LAname) --resource-group  $(resourceGroupName) --settings WORKFLOWS_SERVICEBUS_CONNECTIONRUNTIME_URL=$(serviceBusConnectionRuntimeUrl) WORKFLOWS_KEYVAULT_CONNECTIONRUNTIME_URL=$(keyvaultConnectionRuntimeUrl) WORKFLOWS_COMMONDATASERVICE_CONNECTIONRUNTIME_URL=$(commondataserviceConnectionRuntimeUrl) 
            #WORKFLOWS_AZURETABLES_CONNECTIONRUNTIME_URL=$(azuretablesConnectionRuntimeUrl) 
            addSpnToEnvironment: true
            useGlobalConfig: true